#
user  webuser webuser;
worker_processes  1;

error_log  logs/error.log;
pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    include /opt/nginx/lua/log_collection/nginx_conf/http_block.conf;
    more_set_headers "Upstream-Name: $proxy_host";

    upstream test_server {
        server 127.0.0.1:8111;
        keepalive 60;
    }
    server {
        listen       127.0.0.1:80;

        proxy_http_version 1.1; 
        proxy_set_header Connection ""; 

        location / {
            rewrite_by_lua_block {
                ngx.sleep(0.2)
            }

            proxy_pass http://test_server;
        }

    }

   server {
        listen       8111;
        server_name  127.0.0.1;
        log_by_lua_block {
        }
       
        location / {
            content_by_lua_block {
                local ngx = require "ngx"
                math.randomseed(os.time())  
                local sleep_time = math.random()
                ngx.sleep(sleep_time)
                ngx.say(sleep_time)
            }
        }
   }
}
